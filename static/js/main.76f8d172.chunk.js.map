{"version":3,"sources":["Components/Sort.js","redux/action.js","redux/types.js","Components/View.js","Components/PersonList.js","Components/LangToggler.js","App.js","serviceWorker.js","redux/rootReducer.js","index.js"],"names":["connect","state","persons","mainSort","ascSort","dispatch","setSortId","payload","type","setSortName","setSortAge","setSortAsc","setSortDesc","title","sort","newPersons","concat","className","onClick","a","b","id","name","age","view","setTableView","setPreviewView","params","PersonList","toggleFavourite","ageLang","personArr","map","item","index","key","src","image","alt","phone","favourite","video","phrase","controls","LangToggler","lang","toggleLang","htmlFor","onChange","defaultChecked","sendPerson","search","useEffect","data","Boolean","window","location","hostname","match","initialState","store","createStore","action","compose","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.76f8d172.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setSortName,\r\n  setSortId,\r\n  setSortAge,\r\n  setSortAsc,\r\n  setSortDesc,\r\n} from \"./../redux/action\";\r\n\r\nconst Sort = ({\r\n  persons,\r\n  mainSort,\r\n  ascSort,\r\n  setSortName,\r\n  setSortId,\r\n  setSortAge,\r\n  setSortAsc,\r\n  setSortDesc,\r\n  title,\r\n  sort,\r\n}) => {\r\n  const newPersons = persons.concat();\r\n  return (\r\n    <div className=\"sort-block\">\r\n      <h3>{title}</h3>\r\n      <div className=\"sort-block__bio\">\r\n        <div\r\n          className={`sort-block__item ${mainSort === \"ID\" ? \"active\" : null}`}\r\n          onClick={() => {\r\n            setSortId(newPersons.sort((a, b) => (a.id > b.id ? 1 : -1)));\r\n          }}\r\n        >\r\n          {sort[0]}\r\n        </div>\r\n        <div\r\n          className={`sort-block__item ${\r\n            mainSort === \"name\" ? \"active\" : null\r\n          }`}\r\n          onClick={() => {\r\n            setSortName(newPersons.sort((a, b) => (a.name > b.name ? 1 : -1)));\r\n          }}\r\n        >\r\n          {sort[1]}\r\n        </div>\r\n        <div\r\n          className={`sort-block__item ${mainSort === \"age\" ? \"active\" : null}`}\r\n          onClick={() => {\r\n            setSortAge(newPersons.sort((a, b) => (a.age > b.age ? 1 : -1)));\r\n          }}\r\n        >\r\n          {sort[2]}\r\n        </div>\r\n      </div>\r\n      <div className=\"sort-block__desc\">\r\n        <div\r\n          className={`sort-block__item ${ascSort === \"ASC\" ? \"active\" : null}`}\r\n          onClick={() => {\r\n            setSortAsc(newPersons.sort((a, b) => (a.id > b.id ? 1 : -1)));\r\n          }}\r\n        >\r\n          {sort[3]}\r\n        </div>\r\n        <div\r\n          className={`sort-block__item ${ascSort === \"DESC\" ? \"active\" : null}`}\r\n          onClick={() => {\r\n            setSortDesc(newPersons.sort((a, b) => (a.id < b.id ? 1 : -1)));\r\n          }}\r\n        >\r\n          {sort[4]}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    persons: state.persons,\r\n    mainSort: state.mainSort,\r\n    ascSort: state.ascSort,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setSortId: (payload) => dispatch(setSortId(payload)),\r\n    setSortName: (payload) => dispatch(setSortName(payload)),\r\n    setSortAge: (payload) => dispatch(setSortAge(payload)),\r\n    setSortAsc: (payload) => dispatch(setSortAsc(payload)),\r\n    setSortDesc: (payload) => dispatch(setSortDesc(payload)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sort);\r\n","import {\r\n  SEND_PERSON,\r\n  VIEW_TABLE,\r\n  VIEW_PREVIEW,\r\n  SORT_ID,\r\n  SORT_NAME,\r\n  SORT_AGE,\r\n  SORT_ASC,\r\n  SORT_DESC,\r\n  TOGGLE_FAVOURITE,\r\n  TOGGLE_LANG,\r\n  SEARCH,\r\n} from \"./types\";\r\nexport function sendPerson(payload) {\r\n  return {\r\n    type: SEND_PERSON,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function setTableView() {\r\n  return { type: VIEW_TABLE };\r\n}\r\nexport function setPreviewView() {\r\n  return { type: VIEW_PREVIEW };\r\n}\r\nexport function setSortId(payload) {\r\n  return {\r\n    type: SORT_ID,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function setSortName(payload) {\r\n  return {\r\n    type: SORT_NAME,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function setSortAge(payload) {\r\n  return {\r\n    type: SORT_AGE,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function setSortAsc(payload) {\r\n  return {\r\n    type: SORT_ASC,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function setSortDesc(payload) {\r\n  return {\r\n    type: SORT_DESC,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function toggleFavourite(payload) {\r\n  return {\r\n    type: TOGGLE_FAVOURITE,\r\n    payload: payload,\r\n  };\r\n}\r\nexport function toggleLang() {\r\n  return { type: TOGGLE_LANG };\r\n}\r\nexport function search(payload) {\r\n  return { type: SEARCH, payload: payload };\r\n}\r\n","export const SEND_PERSON = \"SEND_PERSON\";\r\nexport const VIEW_TABLE = \"VIEW_TABLE\";\r\nexport const VIEW_PREVIEW = \"VIEW_PREVIEW\";\r\n\r\nexport const SORT_ID = \"SORT_ID\";\r\nexport const SORT_NAME = \"SORT_NAME\";\r\nexport const SORT_AGE = \"SORT_AGE\";\r\nexport const SORT_ASC = \"SORT_ASC\";\r\nexport const SORT_DESC = \"SORT_DESC\";\r\n\r\nexport const TOGGLE_FAVOURITE = \"TOGGLE_FAVOURITE\";\r\n\r\nexport const TOGGLE_LANG = \"TOGGLE_LANG\";\r\nexport const SEARCH = \"SEARCH\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPreviewView, setTableView } from \"../redux/action\";\r\n\r\nconst View = ({ view, setTableView, setPreviewView, title, params }) => {\r\n  return (\r\n    <div className=\"view-block\">\r\n      <h3>{title}</h3>\r\n      <div className=\"view-block__desc\">\r\n        <div\r\n          className={`view-block__item ${view === \"table\" ? \"active\" : null}`}\r\n          onClick={setTableView}\r\n        >\r\n          {params[0]}\r\n        </div>\r\n        <div\r\n          className={`view-block__item ${view === \"preview\" ? \"active\" : null}`}\r\n          onClick={setPreviewView}\r\n        >\r\n          {params[1]}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    view: state.view,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setTableView: () => dispatch(setTableView()),\r\n    setPreviewView: () => dispatch(setPreviewView()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\r\n","import React from \"react\";\r\n\r\nconst PersonList = ({ persons, view, toggleFavourite, ageLang }) => {\r\n  const personArr = persons.concat();\r\n  if (view === \"table\") {\r\n    return personArr.map((item, index) => {\r\n      return (\r\n        <div className=\"person-item\" key={index}>\r\n          <img\r\n            className=\"persons-item__img\"\r\n            src={`../images/${item.image}.svg`}\r\n            alt={item.name}\r\n          />\r\n          <p className=\"persons-item__name\">{item.name}</p>\r\n          <p className=\"persons-item__age\">\r\n            {item.age} {ageLang}\r\n          </p>\r\n          <p className=\"persons-item__phone\">{item.phone}</p>\r\n\r\n          <p className=\"persons-item__favourite\">\r\n            {item.favourite ? (\r\n              <i\r\n                className=\"fas fa-star\"\r\n                onClick={() => {\r\n                  personArr[index].favourite = !personArr[index].favourite;\r\n                  toggleFavourite(personArr);\r\n                }}\r\n              ></i>\r\n            ) : (\r\n              <i\r\n                className=\"far fa-star\"\r\n                onClick={() => {\r\n                  personArr[index].favourite = !personArr[index].favourite;\r\n                  toggleFavourite(personArr);\r\n                }}\r\n              ></i>\r\n            )}\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n  } else {\r\n    return personArr.map((item, index) => {\r\n      return (\r\n        <div\r\n          className={`person-item preview ${item.video ? \"full\" : null}`}\r\n          key={index}\r\n        >\r\n          <div className=\"person-item__info\">\r\n            <div className=\"person-item__top\">\r\n              <img\r\n                className=\"persons-item__img\"\r\n                src={`../images/${item.image}.svg`}\r\n                alt={item.name}\r\n              />\r\n              <p className=\"persons-item__name\">{item.name}</p>\r\n\r\n              <p className=\"persons-item__favourite\">\r\n                {item.favourite ? (\r\n                  <i\r\n                    className=\"fas fa-star\"\r\n                    onClick={() => {\r\n                      personArr[index].favourite = !personArr[index].favourite;\r\n                      toggleFavourite(personArr);\r\n                    }}\r\n                  ></i>\r\n                ) : (\r\n                  <i\r\n                    className=\"far fa-star\"\r\n                    onClick={() => {\r\n                      personArr[index].favourite = !personArr[index].favourite;\r\n                      toggleFavourite(personArr);\r\n                    }}\r\n                  ></i>\r\n                )}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"person-item__bottom\">\r\n              <p className=\"persons-item__age\">\r\n                {item.age} {ageLang}\r\n              </p>\r\n              <p className=\"persons-item__phone\">{item.phone}</p>\r\n              <p className=\"persons-item__text\">{item.phrase}</p>\r\n            </div>\r\n          </div>\r\n          {item.video ? (\r\n            <div className=\"person-item__video\">\r\n              <video controls=\"controls\">\r\n                <source src={`/videos/${item.video}.mp4`} />\r\n              </video>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n};\r\n\r\nexport default PersonList;\r\n","import React from \"react\";\r\n\r\nexport const LangToggler = ({ lang, toggleLang }) => {\r\n  if (lang === true) {\r\n    return (\r\n      <div className=\"lang-toggler\">\r\n        <p>Русский</p>\r\n        <label className=\"switch\" htmlFor=\"checkbox\">\r\n          <input type=\"checkbox\" id=\"checkbox\" onChange={toggleLang} />\r\n          <div className=\"slider round\"></div>\r\n        </label>\r\n        <p>Английский</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"lang-toggler\">\r\n        <p>Russian</p>\r\n        <label className=\"switch\" htmlFor=\"checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"checkbox\"\r\n            defaultChecked\r\n            onChange={toggleLang}\r\n          />\r\n          <div className=\"slider round\"></div>\r\n        </label>\r\n        <p>English</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default LangToggler;\r\n","import React, { useEffect } from \"react\";\n\nimport \"./App.css\";\nimport Sort from \"./Components/Sort\";\nimport View from \"./Components/View\";\nimport PersonList from \"./Components/PersonList\";\nimport { connect } from \"react-redux\";\nimport data from \"./data.json\";\nimport {\n  sendPerson,\n  toggleFavourite,\n  toggleLang,\n  search,\n} from \"./redux/action\";\nimport LangToggler from \"./Components/LangToggler\";\nimport Search from \"./Components/Search\";\n\nconst App = ({\n  persons,\n  sendPerson,\n  view,\n  toggleFavourite,\n  lang,\n  toggleLang,\n  search,\n}) => {\n  useEffect(() => {\n    sendPerson(data);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <LangToggler lang={lang} toggleLang={toggleLang} />\n      {lang === true ? (\n        <Sort\n          title=\"Сортировка\"\n          sort={[\"ID\", \"Имя\", \"Возраст\", \"По возрастанию\", \"По убыванию\"]}\n        />\n      ) : (\n        <Sort title=\"Sort\" sort={[\"ID\", \"Name\", \"Age\", \"ASC\", \"DESC\"]} />\n      )}\n      {lang === true ? (\n        <View title=\"Вид\" params={[\"Таблица\", \"Превью\"]} />\n      ) : (\n        <View title=\"View\" params={[\"Table\", \"Preview\"]} />\n      )}\n\n      <div className={`person-list ${view === \"preview\" ? \"preview\" : null}`}>\n        {lang === true ? (\n          <PersonList\n            persons={persons}\n            view={view}\n            toggleFavourite={toggleFavourite}\n            ageLang=\"лет\"\n          />\n        ) : (\n          <PersonList\n            persons={persons}\n            view={view}\n            toggleFavourite={toggleFavourite}\n            ageLang=\"years\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    lang: state.lang,\n    persons: state.persons,\n    view: state.view,\n  };\n};\nfunction mapDispatchToProps(dispatch) {\n  return {\n    sendPerson: (item) => dispatch(sendPerson(item)),\n    toggleFavourite: (item) => dispatch(toggleFavourite(item)),\n    toggleLang: () => dispatch(toggleLang()),\n    search: (item) => dispatch(search(item)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  SEND_PERSON,\r\n  VIEW_PREVIEW,\r\n  VIEW_TABLE,\r\n  SORT_ID,\r\n  SORT_NAME,\r\n  SORT_AGE,\r\n  SORT_ASC,\r\n  SORT_DESC,\r\n  TOGGLE_FAVOURITE,\r\n  TOGGLE_LANG,\r\n  SEARCH,\r\n} from \"./types\";\r\nconst initialState = {\r\n  persons: [],\r\n  view: \"preview\",\r\n  mainSort: \"ID\",\r\n  ascSort: \"ASC\",\r\n  lang: true,\r\n};\r\nexport const rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case VIEW_PREVIEW:\r\n      return { ...state, view: \"preview\" };\r\n    case VIEW_TABLE:\r\n      return { ...state, view: \"table\" };\r\n    case SEND_PERSON:\r\n      return { ...state, persons: state.persons.concat(action.payload) };\r\n    case SORT_ID:\r\n      return { ...state, persons: action.payload, mainSort: \"ID\" };\r\n    case SORT_NAME:\r\n      return { ...state, persons: action.payload, mainSort: \"name\" };\r\n    case SORT_AGE:\r\n      return { ...state, persons: action.payload, mainSort: \"age\" };\r\n    case SORT_ASC:\r\n      return { ...state, persons: action.payload, ascSort: \"ASC\" };\r\n    case SORT_DESC:\r\n      return { ...state, persons: action.payload, ascSort: \"DESC\" };\r\n    case TOGGLE_FAVOURITE:\r\n      return { ...state, persons: action.payload };\r\n    case TOGGLE_LANG:\r\n      return { ...state, lang: !state.lang };\r\n    case SEARCH:\r\n      return { ...state, persons: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./redux/rootReducer\";\nimport { BrowserRouter } from \"react-router-dom\";\nconst store = createStore(\n  rootReducer,\n  compose(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}